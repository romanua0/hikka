# ---------------------------------------------------------------------------------
#  /\_/\  
# ( o.o )  üîì Not licensed.
#  > ^ <  
# ---------------------------------------------------------------------------------
# Name: BFG Bunker Mod
# Description: 
# Author: romanua0
# Commands:
# .bfgb1on | .bfgb1off | .bfgb2on | .bfgb2off | .bfgb3on | .bfgb3off
# ---------------------------------------------------------------------------------




from .. import utils, loader
from asyncio import sleep

@loader.tds
class BFGBunkerMod(loader.Module):
    """–ê–≤—Ç–æ—Ñ–∞—Ä–º —Ç–µ–ø–ª–∏—Ü –¥–ª—è BFG Bunker Bot"""

    strings = {"name": "BFGBunker"}

    async def client_ready(self, client, db):
        self.db = db

    async def bfgb1oncmd(self, message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–∞—Ä–º –∫–∞—Ä—Ç–æ—à–∫–∏"""
        await utils.answer(message, "<b>–ó–∞–ø—É—â–µ–Ω–µ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—à–∫–∏</b>")
        status = self.db.set("BFGBunker", "status1", True)
        while status:
            for i in range(15):
                if not self.db.get("BFGBunker", "status1"):
                    return
                await message.respond("–≤—ã—Ä–∞—Å—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ—à–∫—É")
                await sleep(600)
            status = self.db.get("BFGBunker", "status1")
            await message.respond("–≤—ã—Ä–∞—Å—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ—à–∫—É")

    async def bfgb1offcmd(self, message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∞—Ä–º –º–æ—Ä–∫–æ–≤—å"""
        self.db.set("BFGBunker", "status1", False)
        await utils.answer(message, "<b>–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—à–∫—É</b>")
        
    async def bfgb2oncmd(self, message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–∞—Ä–º –º–æ—Ä–∫–æ–≤—å"""
        await utils.answer(message, "<b>–ó–∞–ø—É—â–µ–Ω–µ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –º–æ—Ä–∫–æ–≤—å</b>")
        status = self.db.set("BFGBunker", "status2", True)
        while status:
            for i in range(15):
                if not self.db.get("BFGBunker", "status2"):
                    return
                await message.respond("–≤—ã—Ä–∞—Å—Ç–∏—Ç—å –º–æ—Ä–∫–æ–≤—å")
                await sleep(600)
            status = self.db.get("BFGBunker", "status2")
            await message.respond("–≤—ã—Ä–∞—Å—Ç–∏—Ç—å –º–æ—Ä–∫–æ–≤—å")

    async def bfgb2offcmd(self, message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∞—Ä–º –º–æ—Ä–∫–æ–≤—å"""
        self.db.set("BFGBunker", "status2", False)
        await utils.answer(message, "<b>–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –º–æ—Ä–∫–æ–≤—å</b>")

    async def bfgb3oncmd(self, message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–∞—Ä–º –±–∞–∫–ª–∞–∂–∞–Ω–∞"""
        await utils.answer(message, "<b>–ó–∞–ø—É—â–µ–Ω–µ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –±–∞–∫–ª–∞–∂–∞–Ω–∞</b>")
        status = self.db.set("BFGBunker", "status3", True)
        while status:
            for i in range(15):
                if not self.db.get("BFGBunker", "status3"):
                    return
                await message.respond("–≤—ã—Ä–∞—Å—Ç–∏—Ç—å –±–∞–∫–ª–∞–∂–∞–Ω")
                await sleep(600)
            status = self.db.get("BFGBunker", "status3")
            await message.respond("–≤—ã—Ä–∞—Å—Ç–∏—Ç—å –±–∞–∫–ª–∞–∂–∞–Ω")

    async def bfgb3offcmd(self, message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∞—Ä–º –±–∞–∫–ª–∞–∂–∞–Ω–∞"""
        self.db.set("BFGBunker", "status3", False)
        await utils.answer(message, "<b>–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –±–∞–∫–ª–∞–∂–∞–Ω–∞</b>")
        
          async def bfgb4oncmd(self, message):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–∞—Ä–º –ø–µ—Ä—Ü—è"""
        await utils.answer(message, "<b>–ó–∞–ø—É—â–µ–Ω–µ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –ø–µ—Ä—Ü—è</b>")
        status = self.db.set("BFGBunker", "status4", True)
        while status:
            for i in range(15):
                if not self.db.get("BFGBunker", "status4"):
                    return
                await message.respond("–≤—ã—Ä–∞—Å—Ç–∏—Ç—å –ø–µ—Ä–µ—Ü")
                await sleep(600)
            status = self.db.get("BFGBunker", "status4")
            await message.respond("–≤—ã—Ä–∞—Å—Ç–∏—Ç—å –ø–µ—Ä–µ—Ü")

    async def bfgb4offcmd(self, message):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∞—Ä–º –ø–µ—Ä—Ü—è"""
        self.db.set("BFGBunker", "status4", False)
        await utils.answer(message, "<b>–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏–µ –ø–µ—Ä—Ü—è</b>")
